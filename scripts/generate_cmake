#!/usr/bin/env python
#
# Copyright (C) 2010 Garth N. Wells.
# Licensed under the GNU LGPL Version 2.1.
#
# Generate CMakeLists.txt files in demo and test directories
# This script should be run from the top level directory.

import os

cmakelists_str = \
"""# Require CMake 2.8
cmake_minimum_required(VERSION 2.8)

# Permit user to set location of the config file
#set(CMAKE_MODULE_PATH CACHE STRING "User-specified location of the DOLFIN CMake configure file" )

# Location of DOLFIN CMake config file (could also set CMAKE_MODULE_PATH)
#set(dolfin_DIR $ENV{DOLFIN_CMAKE_CONFIG_PATH})
#set(CMAKE_MODULE_PATHH $ENV{DOLFIN_CMAKE_CONFIG_PATH})
#message(STATUS "Test ${dolfin_DIR}")

# Set verbose output while testing CMake
set(CMAKE_VERBOSE_MAKEFILE 1)

# Get DOLFIN configuration data (dolfin-config.cmake must be in DOLFIN_CMAKE_CONFIG_PATH)
find_package(dolfin)

# DOLFIN include directories
include_directories (${DOLFIN_INCLUDE_DIRS})

# DOLFIN library directories
link_directories(${DOLFIN_LIBRARY_DIR})

# Executable
add_executable(%s %s)

# DOLFIN library
target_link_libraries(%s ${DOLFIN_LIBRARIES})
"""

# Write CMakeLists.txt file
cwd = os.getcwd()
for root, dirs, files in os.walk(cwd +"/demo"):

    executable_names = set()

    # For 'cpp' directories, get list of .cpp files
    if "cpp" in dirs:
        cpp_files = []
        demo_dir = root + "/cpp"
        tmp, demo_name = os.path.split(root)
        for f in os.listdir(demo_dir):
            filename, extension = os.path.splitext(f)
            if extension == ".cpp":
                cpp_files.append(f)

        # Name of demo and cpp source files
        demo_name += "-demo"
        cpp_files = ' '.join(cpp_files)

        # Check for duplicate executable names
        if demo_name not in executable_names:
            executable_names.add(demo_name)
        else:
            print "Warning: duplicate executable names found when generating CMakeLists.txt files."

        # Write file
        with open(demo_dir + "/CMakeLists.txt", 'w') as f:
            f.write( cmakelists_str % (demo_name, cpp_files, demo_name) )
