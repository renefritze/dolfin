# -*- coding: utf-8 -*-
"""This module defines a MultiMeshForm class that wraps FFC forms and UFC forms
into a cpp.MultiMeshForm (dolfin::MultiMeshForm)."""

# Copyright (C) 2008-2015 JÃ¸rgen S. Dokken
#
# This file is part of DOLFIN.
#
# DOLFIN is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# DOLFIN is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with DOLFIN. If not, see <http://www.gnu.org/licenses/>.
#
# Import SWIG-generated extension module (DOLFIN C++)
import dolfin.cpp as cpp

# Import ufl and ufc
import ufl
import ufc

# Import JIT compiler
from dolfin.compilemodules.jit import jit

from dolfin.cpp import deprecation
from dolfin.cpp import MeshFunctionSizet

__all__ = ["MultiMeshForm"]


function_space_error = "Error while extracting test and/or trial spaces. "


class MultiMeshForm(cpp.MultiMeshForm):
    def __init__(self, multimesh, form,
                 form_compiler_parameters=None,
                 function_spaces=None):
        "Create JIT-compiled form from any given form (compiled or not)."
        # Check form argument
        if not isinstance(multimesh, cpp.MultiMesh):
            cpp.dolfin_error("multimeshform.py",
                             "creating dolfin.MultiMeshForm",
                             "Expected a cpp.MultiMesh.")
        if not isinstance(form, ufl.Form):
            cpp.dolfin_error("multimeshform.py",
                             "creating dolfin.MultiMeshForm",
                             "Expected a ufl.Form.")

        # Cutoff for better error message than ffc would give
        if not form.empty() and not form.ufl_domains():
            cpp.dolfin_error("multimeshform.py",
                             "creating dolfin.MultiMeshForm",
                             "The ufl.Form does not include any reference to a mesh.")

        sd = form.subdomain_data()
        from IPython import embed;embed()
        # self.function_spaces = [func.function_space() for func
        #                         in form.arguments()]
         
        cpp.MultiMeshForm.__init__(self, multimesh)
        cppform = cpp.Form(self, form)
        # self._compiled_form,module, prefix = jit(form, form_compiler_parameters)
        # for i in range(multimesh.num_parts()):
        #     print i
        # from IPython import embed; embed()
        # cpp.MultiMeshForm.add(self,form)#self._compiled_form)
