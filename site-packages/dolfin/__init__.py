# Import DOLFIN wrapper module as well as additional utility entities

from ffc import *
from constants import *
from assemble import *
from norm import *
from plot import *

import dolfin
from dolfin import dolfin_get, dolfin_add, dolfin_set, tic, toc
#from dolfin import GenericTensor, GenericMatrix, GenericVector
from dolfin import Matrix, Vector, Scalar
from dolfin import l1, l2, linf 
#from dolfin import LinearSolver, KrylovSolver, LUSolver, GMRES, LU
from dolfin import solve, residual
#from dolfin import ElementLibrary, InvMeshSize
#from dolfin import Graph, GraphEditor, GraphPartition
#from dolfin import UndirectedClique, DirectedClique
from dolfin import File
#from dolfin import Lagrange, Legendre
#from dolfin import Quadrature, Variable
#from dolfin import GaussQuadrature
from dolfin import GaussQuadrature, RadauQuadrature, LobattoQuadrature
from dolfin import Mesh, MeshEditor, MeshFunction, BoundaryMesh
#from dolfin import MeshEntity, MeshTopology, MeshGeometry
#from dolfin import MeshConnectivity, MPIMeshCommunicator, BoundaryMesh
from dolfin import Vertex, Edge, Face, Facet, Cell, Point
from dolfin import vertices, edges, faces, facets, cells
from dolfin import SubDomain
from dolfin import UnitCube, UnitInterval, UnitSquare
#from dolfin import IntersectionDetector, DofMap, DofMapSet
from dolfin import SubSystem
from dolfin import BoundaryCondition
#from dolfin import Form, Assembler
from dolfin import Assembler
#from dolfin import MatrixFactory
from dolfin import NewtonSolver, NonlinearProblem
from dolfin import TimeDependent, ODE, ComplexODE, Homotopy
from dolfin import Progress
from dolfin import cpp_Function # Needed to compile Function subclasses with instant and use them with PyDOLFIN!

# Optional package uBlas 
try: 
    from dolfin import uBlasSparseMatrix, uBlasDenseMatrix, uBlasVector, uBlasFactory
except:
    pass


# Optional package petsc
try: 
    from dolfin import PETScMatrix, PETScVector, PETScFactory
except:
    pass
# Optional package Epetra 
try: 
    from dolfin import EpetraMatrix, EpetraVector, EpetraFactory
except:
    pass


# Optional package slepc
try: 
    from dolfin import SLEPcEigenvalueSolver
except:
    pass

from numpy import sin, cos, exp

import logger
