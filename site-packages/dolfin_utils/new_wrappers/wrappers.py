__author__ = "Marie E. Rognes (meg@simula.no)"
__copyright__ = "Copyright (C) 2011 Marie Rognes"
__license__  = "GNU LGPL version 3 or any later version"

from includes import include_code
from functionspace import *
from form import generate_form

parameters = {"use_common_coefficient_names": True}

def generate_dolfin_code(prefix, forms):

    # Include "include" statements
    code = [include_code]

    # Extract (common) coefficient spaces
    assert(parameters["use_common_coefficient_names"])
    spaces = extract_coefficient_spaces(forms)

    # Generate code for common coefficient spaces
    code += [generate_functionspace_class(*space) for space in spaces]

    # Generate code for forms
    code += [generate_form(form, "Form_%d"%i) for (i, form) in enumerate(forms)]

    # Wrap code in namespace block
    code = "\nnamespace %s\n{\n%s\n}" % (prefix, "\n".join(code))

    # Return code
    return code
