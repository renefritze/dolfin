 - Add integrals on the boundary (ds), partly working
 - Add maps from boundary of reference cell
 - Add evaluation of map from reference cell
 - New Matrix functions: max, min, norm, and sum of rows and columns (erik)
 - Derivatives/gradients of ElementFunction (coefficients f.ex.) implemented
 - Enable assignment to all elements of a NewArray
 - Add functions Boundary::noNodes(), noFaces(), noEdges()
 - New class GaussSeidel (preconditioner and linear solver)
 - New classes Preconditioner and LinearSolver
 - Bug fix for tetrahedral mesh refinement (ingelstrom)
 - Add iterators for Edge and Face on Boundary
 - Add functionality to Map: bdet() and cell() 
 - Add connectivity face-cell and edge-cell
 - New interface for assembly: Galerkin --> FEM
 - Bug fix for PDE systems of size > 3
0.4.11 [2004-04-23]
 - Add multigrid solver (experimental)
 - Update manual
0.4.10
 - Automatic model reduction (experimental)
 - Fix bug in ParticleSystem (divide by mass)
 - Improve control of integration (add function ODE::update())
 - Load/save parameters in XML-format
 - Add assembly test
 - Add simple StiffnessMatrix, MassMatrix, and LoadVector
 - Change dK --> dx
 - Change dx() --> ddx()
 - Add support for GiD file format
 - Add performance tests for multi-adaptivity (both stiff and non-stiff)
 - First version of Newton for the multi-adaptive solver
 - Test for Newton for the multi-adaptive solver
0.4.9
 - Add multi-adaptive solver for the bistable equation
 - Add BiCGSTAB solver (thsv)
 - Fix bug in SOR (thsv)
 - Improved visual program for OpenDX
 - Fix OpenDX file format for scalar functions
 - Allow access to samples of multi-adaptive solution
 - New patch from thsv for gcc 3.4.0 and 3.5.0
 - Make progress step a parameter
 - New function ODE::sparse(const Matrix& A)
 - Access nodes, cells, edges, faces by id
 - New function Matrix::lump()
0.4.8
 - Add support for systems (jansson and bengzon)
 - Add new module wave
 - Add new module wave-vector
 - Add new module elasticity
 - Add new module elasticity-stationary
 - Multi-adaptive updates
 - Fix compilation error in LogStream
 - Fix local Newton iteration for higher order elements
 - Init matrix to given type
 - Add output of cG(q) and dG(q) weights in matrix format
 - Fix numbering of frames from plotslab script
 - Add png output for plotslab script
 - Add script for running stiff test problems, plot solutions
 - Fix bug in MeshInit (node neighbors of node)
 - Modify output of sysinfo()
 - Compile with -Wall -Werror -pedantic -ansi -std=c++98 (thsv)
0.4.7
 - Make all stiff test problems work
 - Display status report also when using step()
 - Improve adaptive damping for stiff problems (remove spikes)
 - Modify Octave/Matlab format for solution data (speed improvement)
 - Adaptive sampling of solution (optional)
 - Restructure stiff test problems
 - Check if value of right-hand side is valid
 - Modify divergence test in AdaptiveIterationLevel1
0.4.6
 - Save vectors and matrices from Matlab/Octave (foufas)
 - Rename writexml.m to xmlmesh.m
 - Inlining of important functions
 - Optimize evaluation of elements
 - Optimize Lagrange polynomials
 - Optimize sparsity: use stl containers
 - Optimize choice of discrete residual for multi-adaptive solver
 - Don't save solution in benchmark proble
 - Improve computation of divergence factor for underdamped systems
 - Don't check residual on first slab for fixed time step
 - Decrease largest (default) time step to 0.1
 - Add missing <cmath> in TimeStepper
 - Move real into dolfin namespace
0.4.5
 - Rename function.h to enable compilation under Cygwin
 - Add new benchmark problem for multi-adaptive solver
 - Bug fix for ParticleSystem
 - Initialization of first time step
 - Improve time step regulation (threshold)
 - Improve stabilization
 - Improve TimeStepper interface (Ko Project)
 - Use iterators instead of recursively calling TimeSlab::update()
 - Clean up ODESolver
 - Add iterators for elements in time slabs and element groups
 - Add -f to creation of symbolic links
0.4.4
 - Add support for 3D graphics in Octave using Open Inventor (jj)
0.4.3
 - Stabilization of multi-adaptive solver (experimental) 
 - Improved non-support for curses (--disable-curses)
 - New class MechanicalSystem for simulating mechanical systems
 - Save debug info from primal and dual (plotslab.m)
 - Fix bug in progress bar
 - Add missing include file in Components.h (kakr)
 - New function dolfin_end(const char* msg, ...)
 - Move numerical differentiation to RHS
 - New class Event for limited display of messages
 - Fix bug in LogStream (large numbers in floating point format)
 - Specify individual time steps for different components
 - Compile without warnings
 - Add -Werror to option enable-debug
 - Specify individual methods for different components
 - Fix bug in dGqMethods
 - Fix bug (delete old block) in ElementData
 - Add parameters for method and order
 - New test problem reaction
 - New class FixedPointIteration
 - Fix bug in grid refinement
0.4.2
 - Fix bug in computation of residual (divide by k)
 - Add automatic generation and solution of the dual problem
 - Automatic selection of file names for primal and dual
 - Fix bug in progress bar (TerminalLogger)
 - Many updates of multi-adaptive solver
 - Add class ODEFunction
 - Update function class hierarchies
 - Move functions to a separate directory
 - Store multi-adaptive solution binary on disk with cache
0.4.1
 - First version of multi-adaptive solver working
 - Clean up file formats
 - Start changing from int to unsigned int where necessary
 - Fix bool->int when using stdard in Parameter
 - Add NewArray and NewList (will replace Array and List)
0.4.0
 - Initiation of the FEniCS project
 - Change syntax of mesh files: grid -> mesh
 - Create symbolic links instead of copying files
 - Tanganyika -> ODE 
 - Add Heat module
 - Grid -> Mesh
 - Move forms and mappings to separate libraries 
 - Fix missing include of DirectSolver.h
0.3.12
 - Adaptive grid refinement (!)
 - Add User Manual
 - Add function dolfin_log() to turn logging on/off
 - Change from pointers to references for Node, Cell, Edge, Face
 - Update writexml.m
 - Add new grid files and rename old grid files
0.3.11
 - Add configure option --disable-curses
 - Grid refinement updates
 - Make OpenDX file format work for grids (output)
 - Add volume() and diameter() in cell
 - New classes TriGridRefinement and TetGridRefinement
 - Add iterators for faces and edges on a boundary
 - New class GridHierarchy
0.3.10
 - Use new boundary structure in Galerkin
 - Make dolfin_start() and dolfin_end() work
 - Make dolfin_assert() raise segmentation fault for plain text mode
 - Add configure option --enable-debug
 - Use autoreconf instead of scripts/preconfigure
 - Rename configure.in -> configure.ac
 - New class FaceIterator
 - New class Face
 - Move computation of boundary from GridInit to BoundaryInit
 - New class BoundaryData
 - New class BoundaryInit
 - New class Boundary
 - Make InitGrid compute edges
 - Add test program for generic matrix in src/demo/la
 - Clean up Grid classes
 - Add new class GridRefinementData
 - Move data from Cell to GenericCell
 - Make GMRES work with user defined matrix, only mult() needed
 - GMRES now uses only one function to compute residual()
 - Change Matrix structure (a modified envelope/letter)
 - Update script checkerror.m for Poisson 
 - Add function dolfin_info_aptr()
 - Add cast to element pointer for iterators
 - Clean up and improve the Tensor class
 - New class: List
 - Name change: List -> Table
 - Name change: ShortList -> Array
 - Make functions in GridRefinement static
 - Make functions in GridInit static
 - Fix bug in GridInit (eriksv)
 - Add output to OpenDX format for 3D grids
 - Clean up ShortList class
 - Clean up List class
 - New class ODE, Equation replaced by PDE
 - Add Lorenz test problem
 - Add new problem type for ODEs
 - Add new module ode
 - Work on multi-adaptive ODE solver (lots of new stuff)
 - Work on grid refinement
 - Write all macros in LoggerMacros in one line
 - Add transpose functions to Matrix (Erik)
0.3.9
 - Update Krylov solver (Erik, Johan)
 - Add new LU factorization and LU solve (Niklas)
 - Add benchmark test in src/demo/bench
 - Add silent logger
0.3.8
 - Make sure dolfin-config is regenerated every time
 - Add demo program for cG(q) and dG(q)
 - Add dG(q) precalc of nodal points and weights
 - Add cG(q) precalc of nodal points and weights
 - Fix a bug in configure.in (AC_INIT with README)
 - Add Lagrange polynomials
 - Add multiplication with transpose
 - Add scalar products with rows and columns
 - Add A[i][j] index operator for quick access to dense matrix
0.3.7
 - Add new Matlab-like syntax like A(i,all) = x or A(3,all) = A(4,all)
 - Add dolfin_assert() macro enabled if debug is defined
 - Redesign of Matrix/DenseMatrix/SparseMatrix to use Matrix as common interface
 - Include missing cmath in Legendre.cpp and GaussianQuadrature.cpp
0.3.6
 - Add output functionality in DenseMatrix
 - Add high precision solver to DirectSolver
 - Clean up error messages in Matrix
 - Make solvers directly accessible through Matrix and DenseMatrix
 - Add quadrature (Gauss, Radau, and Lobatto) from Tanganyika
 - Start merge with Tanganyika
 - Add support for automatic documentation using doxygen
 - Update configure scripts
 - Add greeting at end of compilation
0.3.5
 - Define version number only in the file configure.in
 - Fix compilation problem (missing depcomp)
0.3.4
 - Fix bugs in some of the ElementFunction operators
 - Make convection-diffusion solver work again
 - Fix bug in integration, move multiplication with the determinant
 - Fix memory leaks in ElementFunction
 - Add parameter to choose output format
 - Make OctaveFile and MatlabFile subclasses of MFile
 - Add classes ScalarExpressionFunction and VectorExpressionFunction
 - Make progress bars work cleaner
 - Get ctrl-c in curses logger
 - Remove <Problem>Settings-classes and use dolfin_parameter()
 - Redesign settings to match the structure of the log system
 - Add vector functions: Function::Vector
 - Add vector element functions: ElementFunction::Vector
0.3.3
 - Increased functionality of curses-based interface
 - Add progress bars to log system
0.3.2
 - More work on grid refinement
 - Add new curses based log system
0.3.1
 - Makefile updates: make install should now work properly
 - KrylovSolver updates
 - Preparation for grid refinement
 - Matrix and Vector updates
0.3.0
 - Make poisson work again, other modules still not working
 - Add output format for octave
 - Fix code to compile with g++-3.2 -Wall -Werror
 - New operators for Matrix
 - New and faster GMRES solver (speedup factor 4)
 - Changed name from SparseMatrix to Matrix
 - Remove old unused code
 - Add subdirectory math containing mathematical functions
 - Better access for A(i,j) += to improve speed in assembling
 - Add benchmark for linear algebra
 - New definition of finite element
 - Add algebra for function spaces
 - Convert grids in data/grids to xml.gz
 - Add iterators for Nodes and Cells
 - Change from .hh to .h
 - Add operators to Vector class (foufas)
 - Add dependence on libxml2
 - Change from .C to .cpp to make Jim happy.
 - Change input/output functionality to streams
 - Change to new data structure for Grid
 - Change to object-oriented API at top level
 - Add use of C++ namespaces
 - Complete and major restructuring of the code
 - Fix compilation error in src/config
 - Fix name of keyword for convection-diffusion
0.2.11-1
 - Fix compilation error (`source`) on Solaris
0.2.11
 - Automate build process to simplify addition of new modules
 - Fix bug in matlab_write_field() (walter)
 - Fix bug in SparseMatrix::GetCopy() (foufas)
0.2.10-1
 - Fix compilation errors on RedHat (thsv)
0.2.10
 - Fix compilation of problems to use correct compiler
 - Change default test problems to the ones in the report
 - Improve memory management using mpatrol for tracking allocations
 - Change bool to int for va_arg, seems to be a problem with gcc > 3.0
 - Improve input / output support: GiD, Matlab, OpenDX
0.2.8
 - Navier-Stokes starting to work again
 - Add Navier-Stokes 2d
 - Bug fixes
0.2.7
 - Add support for 2D problems
 - Add module convection-diffusion
 - Add local/global fields in equation/problem
 - Bug fixes
 - Navier-Stokes updates (still broken)
0.2.6 [2002-02-19]
 - Navier-Stokes updates (still broken)
 - Output to matlab format
0.2.5
 - Add variational formulation with overloaded operators for systems
 - ShapeFunction/LocalField/FiniteElement according to Scott & Brenner
0.2.4
 - Add boundary conditions
 - Poisson seems to work ok
0.2.3
 - Add GMRES solver
 - Add CG solver
 - Add direct solver
 - Add Poisson solver
 - Big changes to the organisation of the source tree
 - Add kwdist.sh script
 - Bug fixes
0.2.2:
 - Remove curses temporarily
0.2.1:
 - Remove all PETSc stuff. Finally!
 - Gauss-Seidel cannot handle the pressure equation
0.2.0:
 - First GPL release
 - Remove all of Klas Samuelssons proprietary grid code
 - Adaptivity and refinement broken, include in next release
