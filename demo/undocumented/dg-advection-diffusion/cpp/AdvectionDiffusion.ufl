# Copyright (C) 2007 Kristian B. Oelgaard and Garth N. Wells.
# Licensed under the GNU LGPL Version 2.1.
#
# First added:  2007-06-29
# Last changed: 2011-03-09
#
# The bilinear form a(phi, v) and linear form L(v) for
# advection-diffusion. Discontinuous formulation with upwinding.

scalar = FiniteElement("Discontinuous Lagrange", "triangle", 1)
vector = VectorElement("Lagrange", "triangle", 2)
constant = FiniteElement("Discontinuous Lagrange", "triangle", 0)

# Trial and test functions
phi = TrialFunction(scalar)
v   = TestFunction(scalar)

u = Coefficient(vector)
f = Coefficient(scalar)
h = Constant(triangle)
h_avg = (h('+') + h('-'))/2
n = scalar.cell().n

kappa = Constant(triangle)
alpha = Constant(triangle)

# ( dot(v, n) + |dot(v, n)| )/2.0
un = (dot(u, n) + abs(dot(u, n)))/2.0

# Bilinear form
a_int = dot(kappa*grad(phi) - u*phi, grad(v))*dx

a_fac = (kappa('+')*(alpha('+')/h_avg)*dot(jump(phi, n), jump(v, n))*dS
         - kappa('+')*dot(jump(phi, n), avg(grad(v)))*dS
         - kappa('+')*dot(avg(grad(phi)), jump(v, n))*dS)

a_vel = (dot(un('+')*phi('+') - un('-')*phi('-'), jump(v))*dS
         + dot(un*phi, v)*ds)

a = a_int + a_fac + a_vel

# Linear form
L = v*f*dx

