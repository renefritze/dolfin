# Copyright (C) 2010 Kristian B. Oelgaard (k.b.oelgaard@gmail.com)
# Licensed under the GNU GPL version 3 or any later version
#
# The bilinear form a(u, v) and linear form L(v) for
# Poisson's equation where spatial coordinates are used to define the source
# term. However, the source term is only active in a part of the domain and
# a Conditional is used to handle this.
#
# Compile this form with FFC: ffc -l dolfin Conditional.ufl

element = FiniteElement("Lagrange", triangle, 2)

u = TrialFunction(element)
v = TestFunction(element)

x = triangle.x
c0 = conditional(le( (x[0]-0.33)**2 + (x[1]-0.67)**2,  0.015), -1.0, 5.0)
c = conditional( le( (x[0]-0.33)**2 + (x[1]-0.67)**2,  0.025), c0, 0.0 )

t0 = conditional(ge( x[0],  0.55), -1.0, 0.0)
t1 = conditional(le( x[0],  0.95), t0, 0.0)
t2 = conditional(ge( x[1],  0.05), t1, 0.0)
t3 = conditional(le( x[1],  0.45), t2, 0.0)
t = conditional(ge( x[1] - x[0] - 0.05 + 0.55,  0.0), t3, 0.0)

f = c + t

a = inner(grad(u), grad(v))*dx
L = f*v*dx

