# Copyright (C) 2007 Kristian B. Oelgaard and Garth N. Wells.
# Licensed under the GNU LGPL Version 2.1.
#
# First added:  2007-06-29
# Last changed: 2008-07-15
#
# The bilinear form a(v, u) and linear form L(v) for
# advection-diffusion. Discontinuous formulation with upwinding.

scalar = FiniteElement("Discontinuous Lagrange", "triangle", 1)
vector = VectorElement("Lagrange", "triangle", 2)
constant = FiniteElement("Discontinuous Lagrange", "triangle", 0)

# Test and trial functions
v   = TestFunction(scalar)
phi = TrialFunction(scalar)

u = Function(vector)
f = Function(scalar)
h = Constant(triangle)
h_avg = (h('+') + h('-'))/2
n = scalar.cell().n

kappa = Constant(triangle)
alpha = Constant(triangle)

# ( dot(v, n) + |dot(v, n)| )/2.0 
un = (dot(u, n) + abs(dot(u, n)))/2.0

# Bilinear form
a_int = dot(grad(v), kappa*grad(phi) - u*phi)*dx

a_fac = kappa('+')*(alpha('+')/h_avg)*dot(jump(v, n), jump(phi, n))*dS \
      - kappa('+')*dot(avg(grad(v)), jump(phi, n))*dS \
      - kappa('+')*dot(jump(v, n), avg(grad(phi)))*dS

a_vel = dot(jump(v), un('+')*phi('+') - un('-')*phi('-') )*dS  + dot(v, un*phi)*ds

a = a_int + a_fac + a_vel

# Linear form
L = v*f*dx

