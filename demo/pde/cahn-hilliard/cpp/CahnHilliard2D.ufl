# Copyright (C) 2006-2010 Garth N Wells.
# Licensed under the GNU LGPL Version 2.1.
#
# First added:  2006
# Last changed: 2010-09-01
#
# The linearised bilinear form a(du, v) and linear form L(v) for
# the Cahn-Hilliard equation.
#
# Compile this form with FFC: ffc -l dolfin -O -f split CahnHilliard2D.ufl

P1 = FiniteElement("Lagrange", "triangle", 1)
ME = P1*P1

du   = TrialFunction(ME)
q, v = TestFunctions(ME)

u   = Coefficient(ME)  # current solution
u0  = Coefficient(ME)  # solution from previous converged step

# Split mixed functions
dc, dmu = split(du)
c,  mu  = split(u)
c0, mu0 = split(u0)

lmbda    = Constant(triangle) # surface energy parameter
dt       = Constant(triangle) # time step
theta    = Constant(triangle) # time stepping parameter

# mu_(n+theta)
mu_mid = (1-theta)*mu0 + theta*mu

# Compute the chemical potential df/dc
c    = variable(c)
f    = 100*c**2*(1-c)**2
dfdc = diff(f, c)

L0 = c*q*dx  - c0*q*dx   + dt*dot(grad(mu_mid), grad(q))*dx
L1 = mu*v*dx - dfdc*v*dx - lmbda*dot(grad(c), grad(v))*dx
L = L0 + L1

a = derivative(L, u, du)
