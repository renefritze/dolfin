# Copyright (C) 2006-2010 Garth N Wells.
# Licensed under the GNU LGPL Version 2.1.
#
# First added:  2006
# Last changed: 2010-08-31
#
# The linearised bilinear form a(v, u) and linear form L(v) for
# the Cahn-Hilliard equation.
#
# Compile this form with FFC: ffc -l dolfin -O -f split CahnHilliard2D.ufl

P1 = FiniteElement("Lagrange", "triangle", 1)
ME = P1*P1

q, v  = TestFunctions(ME)
du    = TrialFunction(ME)

u   = Coefficient(ME)  # current solution
u0  = Coefficient(ME)  # solution from previous converged step

# Split mixed functions
dc, dmu = split(du)
c,  mu  = split(u)
c0, mu0 = split(u0)

lmbda    = Constant(triangle) # surface energy parameter
dt       = Constant(triangle) # time step
theta    = Constant(triangle) # time stepping parameter

# Compute the chemical potential df/dc
c    = variable(c)
f    = 100*c**2*(1-c)**2
dfdc = diff(f, c)

# mu^(n+theta)
mu_mid = (1-theta)*mu0 + theta*mu

L0 = q*c*dx  - q*c0*dx   + dt*dot(grad(q), grad(mu_mid))*dx
L1 = v*mu*dx - v*dfdc*dx - lmbda*dot(grad(v), grad(c))*dx
L = L0 + L1

a = derivative(L, u, du)
