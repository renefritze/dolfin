# Copyright (C) 2006-2009 Garth N Wells.
# Licensed under the GNU LGPL Version 2.1.
#
# First added:  2006
# Last changed: 2009-06-06
#
# The linearised bilinear form a(v, U) and linear form L(v) for
# the Cahn-Hilliard equation.
#
# Compile this form with FFC: ffc -l dolfin CahnHilliard.form

P1 = FiniteElement("Lagrange", "tetrahedron", 1)
ME = P1 + P1

q, v  = TestFunctions(ME)
du    = TrialFunction(ME)

u   = Function(ME)  # current solution 
u0  = Function(ME)  # solution from previous converged step 

# Split mixed functions
dk, dc = split(du) 
k,  c  = split(u)
k0, c0 = split(u0)

lmbda    = Constant(tetrahedron) # surface parameter
muFactor = Constant(tetrahedron) # chemical free energy multiplier

dt       = Constant(tetrahedron) # time step
theta    = Constant(tetrahedron) # time stepping parameter 

# Potential mu = \phi,c (chemical free-energy \phi = c^2*(1-c)^2)
mu = muFactor*(2*c*(1-c)*(1-c) - 2*c*c*(1-c))

# k^(n+theta)
k_mid = (1-theta)*k0 + theta*k

L1 = q*c*dx - q*c0*dx + dt*dot(grad(q), grad(k_mid))*dx
L2 = v*k*dx - v*mu*dx - lmbda*dot(grad(v), grad(c))*dx
L = L1 + L2

a = derivative(L, u, du)
