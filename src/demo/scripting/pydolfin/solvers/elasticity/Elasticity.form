# Copyright (c) 2005 Johan Jansson (johanjan@math.chalmers.se)
# Licensed under the GNU GPL Version 2
#
# First added:  2005
# Last changed: 2006-03-28
#
# The bilinear form for classical linear elasticity (Navier)
# Compile this form with FFC: ffc Elasticity.form.

element1 = FiniteElement("Vector Lagrange", "tetrahedron", 1)
element2 = FiniteElement("Lagrange", "tetrahedron", 1)

v = TestFunction(element1)
u = TrialFunction(element1)

lmbda = Function(element2) # Lame coefficient
mu    = Function(element2) # Lame coefficient

f = Function(element1) # Source

# Dimension of domain
d = element1.shapedim()

def epsilon(u):
    return 0.5 * (grad(u) + transp(grad(u)))

def E(e, lmbda, mu):
    Ee = 2.0 * mult(mu, e) + mult(lmbda, mult(trace(e), Identity(d)))
    
    return Ee

sigma = E(epsilon(u), lmbda, mu)

a = dot(sigma, epsilon(v)) * dx
L = dot(f, v) * dx
