# Copyright (c) 2004 Anders Logg (logg@tti-c.org)
# Licensed under the GNU GPL Version 2
#
# The bilinear form for a mass matrix.
#
# Compile this form with FFC: ffc Mass.form

# Provides matrix operators
from Numeric import *

element = FiniteElement("Vector Lagrange", "tetrahedron", 1)

v = BasisFunction(element)
u = BasisFunction(element)

lmbda = Constant() # Lame coefficient
mu    = Constant() # Lame coefficient

f = Function(element) # Source

# Dimension (FFC should provide this)
d = 3

def grad(u):
    return [ [u[i].dx(j) for i in range(d)] for j in range(d) ]

def epsilon(u):
    return 0.5 * (grad(u) + transpose(grad(u)))

def E(e, lmbda, mu):
    Ee = 2.0 * multiply(mu, e) + \
         multiply(lmbda, multiply(trace(e), identity(3)))
    
    return Ee
        
sigma = E(epsilon(u), lmbda, mu)

a = vdot(sigma, epsilon(v)) * dx
L = f[i] * v[i] * dx
