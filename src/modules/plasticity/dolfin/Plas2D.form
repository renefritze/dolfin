# Copyright (C) 2006 Kristian Oelgaard and Garth N. Wells.
# Licensed under the GNU GPL Version 2.
#
# First added:  2006-11-13

elementA 	= FiniteElement("Vector Lagrange", "triangle", 1)
elementT = FiniteElement("Discontinuous vector Lagrange", "triangle", 0, 9)
elementS = FiniteElement("Discontinuous vector Lagrange", "triangle", 0, 3)

v = TestFunction(elementA)
u = TrialFunction(elementA)
f = Function(elementA)
t = Function(elementT)
s = Function(elementS)

def eps(u):
	return [u[0].dx(0), u[1].dx(1), u[0].dx(1) + u[1].dx(0)]

def sigma(s):
	return ([s[0], s[2]], [s[2], s[1]])

def dsigma(u):
  return ([t[0]*eps(u)[0] + t[1]*eps(u)[1] + t[2]*eps(u)[2] , t[6]*eps(u)[0] + t[7]*eps(u)[1] + t[8]*eps(u)[2] ] \
					, [ t[6]*eps(u)[0] + t[7]*eps(u)[1] + t[8]*eps(u)[2] , t[3]*eps(u)[0] + t[4]*eps(u)[1] + t[5]*eps(u)[2] ]) 

a = dot(grad(v), dsigma(u) )*dx 
L = dot(v,f)*dx - dot(grad(v), sigma(s))*dx
