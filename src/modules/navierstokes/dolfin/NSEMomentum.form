# Copyright (c) 2005 Johan Hoffman (hoffman@cims.nyu.edu)
# Licensed under the GNU GPL Version 2
#
# The momentum equation for the incompressible 
# Navier-Stokes equations using cG(1)cG(1)
#
# Compile this form with FFC: ffc NSEMomentum.form.

name = "NSEMomentum"
#scalar = FiniteElement("Lagrange", "triangle", 1)
#vector = FiniteElement("Vector Lagrange", "triangle", 1)
#constant_vector = FiniteElement("Discontinuous vector Lagrange", "triangle", 0)
#constant_scalar = FiniteElement("Discontinuous Lagrange", "triangle", 0)
scalar = FiniteElement("Lagrange", "tetrahedron", 1)
vector = FiniteElement("Vector Lagrange", "tetrahedron", 1)
constant_vector = FiniteElement("Discontinuous vector Lagrange", "tetrahedron", 0)
constant_scalar = FiniteElement("Discontinuous Lagrange", "tetrahedron", 0)

v            = BasisFunction(vector)
u            = BasisFunction(vector)
uc           = Function(vector)
um           = Function(constant_vector)
u0           = Function(vector)
f            = Function(vector)
p            = Function(scalar)
delta1       = Function(constant_scalar)       # stabilization 
delta2       = Function(constant_scalar)       # stabilization

k            = Constant()
nu           = Constant()

i0 = Index()
i1 = Index()
i2 = Index()

#G_a  = v[i0]*u[i0]*dx + k*nu*0.5*v[i0].dx(i1)*u[i0].dx(i1)*dx + 0.5*k*v[i0]*uc[i1]*u[i0].dx(i1)*dx 	
#SD_a = delta1*k*0.5*uc[i1]*v[i0].dx(i1)*uc[i2]*u[i0].dx(i2)*dx + delta2*k*0.5*v[i0].dx(i0)*u[i1].dx(i1)*dx  

#G_L  = v[i0]*u0[i0]*dx + k*v[i0]*f[i0]*dx + k*v[i0].dx(i0)*p*dx - k*nu*0.5*v[i0].dx(i1)*u0[i0].dx(i1)*dx - 0.5*k*v[i0]*uc[i1]*u0[i0].dx(i1)*dx 
#SD_L = delta1*k*uc[i1]*v[i0].dx(i1)*f[i0]*dx - delta1*k*0.5*uc[i1]*v[i0].dx(i1)*uc[i2]*u0[i0].dx(i2)*dx - delta1*k*uc[i1]*v[i0].dx(i1)*p.dx(i0)*dx - delta2*k*0.5*v[i0].dx(i0)*u0[i1].dx(i1)*dx

G_a  = v[i0]*u[i0]*dx + k*nu*0.5*v[i0].dx(i1)*u[i0].dx(i1)*dx + 0.5*k*v[i0]*uc[i1]*u[i0].dx(i1)*dx 	
SD_a = delta1*k*0.5*um[i1]*v[i0].dx(i1)*um[i2]*u[i0].dx(i2)*dx + delta2*k*0.5*v[i0].dx(i0)*u[i1].dx(i1)*dx  

G_L  = v[i0]*u0[i0]*dx + k*v[i0]*f[i0]*dx + k*v[i0].dx(i0)*p*dx - k*nu*0.5*v[i0].dx(i1)*u0[i0].dx(i1)*dx - 0.5*k*v[i0]*uc[i1]*u0[i0].dx(i1)*dx 
SD_L = delta1*k*um[i1]*v[i0].dx(i1)*f[i0]*dx - delta1*k*0.5*um[i1]*v[i0].dx(i1)*um[i2]*u0[i0].dx(i2)*dx - delta1*k*um[i1]*v[i0].dx(i1)*p.dx(i0)*dx - delta2*k*0.5*v[i0].dx(i0)*u0[i1].dx(i1)*dx

a = G_a + SD_a  
L = G_L + SD_L






