# Test form for updated elasticity

from Numeric import *
from math import *

name = "ElasticityUpdated"
element1 = FiniteElement("Discontinuous vector Lagrange", "tetrahedron", 0, 9)
element2 = FiniteElement("Vector Lagrange", "tetrahedron", 1)

nu = Constant()	# viscosity coefficient

v = BasisFunction(element2)
f = Function(element2)
sigma = Function(element1)
epsilon = Function(element1)

global zero
zero = 0.0 * Constant()

def ffczeros(m, n):
    A = array((zero))
    A = resize(A, (m, n))
    A *= 0.0
    
    return A

def ffcidentity(m):
    A = myzeros(m, m)

    for ii in range(m):
        for jj in range(m):
            if ii == jj:
                A[ii, jj] = 1.0
                    
    return A

def grad(u):
    gu = ffczeros(3, 3)

    for ii in range(3):
        for jj in range(3):
            gu[ii, jj] = u[ii].dx(jj)

    return gu

def tomatrix(q):
    qmatrix = ffczeros(3, 3)

    for ii in range(3):
        for jj in range(3):
            qmatrix[ii, jj] = q[3 * ii + jj];

    return qmatrix


gradv = grad(v)
sigmam = tomatrix(sigma)
epsilonm = tomatrix(epsilon)

L = (f[i] * v[i] -
	vdot(sigmam, gradv) -
	nu * (vdot(epsilonm, gradv))) * dx
