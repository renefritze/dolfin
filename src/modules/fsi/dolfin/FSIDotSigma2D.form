##########################################################
# Form for creating dotsigma
#
#  sigma_n+1 = sigma_n + k * dotsigma
##########################################################

name = "FSIDotSigma2D"

##########################################################

vector          = FiniteElement("Vector Lagrange", "triangle", 1)
constant_tensor = FiniteElement("Discontinuous vector Lagrange", "triangle", 0, 4)
constant_scalar = FiniteElement("Discontinuous Lagrange", "triangle", 0)

##########################################################

q        = TestFunction(constant_tensor)  # Weak variable
u        = Function(vector)               # Velocity
icv	 = Function(constant_scalar)      # Cell volume
mu       = Constant()                     # Lame coefficient

##########################################################

def epsilon(u):
    return 0.5 * (grad(u) + transp(grad(u)))

def E(e, mu):
    Ee = 2.0 * mult(mu, e) 
    return Ee

def tomatrix(q):
    return [ [q[2 * i + j] for i in range(2)] for j in range(2) ]

Eeu = E(epsilon(u), mu)

##########################################################

qmat        = tomatrix(q)

L = icv * dot(Eeu, qmat) * dx

