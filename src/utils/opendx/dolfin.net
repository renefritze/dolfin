//
// time: Thu Sep 18 13:50:08 2003
//
// version: 3.2.0 (format), 4.3.0 (DX)
//
//
// MODULE main
//
// comment: This visual program is intended to be a general purpose program for viewing three-dimensional data. 
// comment: 
// comment: If the data are multivariate, you can choose which variable to visualize. If the data are a series, you can use the sequencer to step through the series. For position-dependent data, an isosurface is created. For any data set, a maptoplane (cutting plane) is placed through the data and colored. You can open the colormap editor by choosing "Open All Colormap Editors" from the Windows menu.
// comment: 
// comment: If you would like to modify or use this visual program in the future, choose Open Visual Program Editor from the Windows menu, and then choose Save As from the File menu of the VPE.
// page assignment: Arrows	order=9, windowed=0, showing=0
// page assignment: Colorslice	order=6, windowed=0, showing=0
// page assignment: Frame	order=4, windowed=0, showing=0
// page assignment: Geometry	order=10, windowed=0, showing=1
// page assignment: Image	order=11, windowed=0, showing=0
// page assignment: Import	order=2, windowed=0, showing=0
// page assignment: Iso surface	order=5, windowed=0, showing=0
// page assignment: Streamlines	order=7, windowed=0, showing=0
// page assignment: Variable	order=3, windowed=0, showing=0
// page assignment: Vorticity	order=8, windowed=0, showing=0
// workspace: width = 433, height = 465
// layout: snap = 1, width = 20, height = 31, align = UL
//
macro main(
) -> (
) {
    // 
    // node FileSelector[3]: x = 20, y = 124, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/home/logg/work/src/dolfin/dolfin/src/demo/grid/grid_refined.dx"
    // output[2]: visible = 1, type = 32, value = "grid_refined.dx"
    // page group: Import
    //
    // 
    // node StringList[1]: x = 100, y = 279, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "Grid", "u" }
    // page group: Import
    //
    // 
    // node Selector[3]: x = 120, y = 124, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_3"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "Grid" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 0 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = {"Grid" "u" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = {0  1  }
    // output[1]: visible = 1, type = 29, value = 0 
    // output[2]: visible = 1, type = 32, value = "Grid" 
    // page group: Import
    //
main_Selector_3_out_1[cache: 2],
main_Selector_3_out_2[cache: 2] = 
    Selector(
    main_Selector_3_in_1,
    main_Selector_3_in_2,
    main_Selector_3_in_3,
    main_StringList_1_out_1,
    main_Selector_3_in_5,
    main_Selector_3_in_6,
    main_Selector_3_in_7
    ) [instance: 3, cache: 1];
    // 
    // node String[1]: x = 80, y = 341, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "dx"
    // page group: Import
    //
    // 
    // node Import[1]: x = 20, y = 279, inputs = 6, label = Import
    // page group: Import
    //
main_Import_1_out_1 = 
    Import(
    main_FileSelector_3_out_1,
    main_Selector_3_out_2,
    main_String_1_out_1,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[8]: x = 20, y = 341, inputs = 1, label = Dataset
    // page group: Import
    //
Dataset = main_Import_1_out_1;
    // 
    // node Receiver[3]: x = 20, y = 124, inputs = 1, label = Dataset
    // page group: Variable
    //
main_Receiver_3_out_1[cache: 0] = Dataset;
    // 
    // node Inquire[3]: x = 20, y = 217, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "is generic group +1"
    // page group: Variable
    //
main_Inquire_3_out_1 = 
    Inquire(
    main_Receiver_3_out_1,
    main_Inquire_3_in_2,
    main_Inquire_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Selector[2]: x = 340, y = 217, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_2"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "on" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 1 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "on" "off" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 1 0 }
    // output[1]: visible = 1, type = 29, value = 1 
    // output[2]: visible = 1, type = 32, value = "on" 
    // page group: Variable
    //
main_Selector_2_out_1[cache: 2],
main_Selector_2_out_2[cache: 2] = 
    Selector(
    main_Selector_2_in_1,
    main_Selector_2_in_2,
    main_Selector_2_in_3,
    main_Receiver_3_out_1,
    main_Selector_2_in_5,
    main_Selector_2_in_6,
    main_Selector_2_in_7
    ) [instance: 2, cache: 1];
    // 
    // node Select[1]: x = 280, y = 217, inputs = 3, label = Select
    // page group: Variable
    //
main_Select_1_out_1 = 
    Select(
    main_Receiver_3_out_1,
    main_Selector_2_out_1,
    main_Select_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Switch[6]: x = 140, y = 310, inputs = 3, label = Switch
    // page group: Variable
    //
main_Switch_6_out_1 = 
    Switch(
    main_Inquire_3_out_1,
    main_Receiver_3_out_1,
    main_Select_1_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Transmitter[9]: x = 300, y = 403, inputs = 1, label = Variable
    // page group: Variable
    //
Variable = main_Switch_6_out_1;
    // 
    // node Receiver[4]: x = 20, y = 124, inputs = 1, label = Variable
    // page group: Frame
    //
main_Receiver_4_out_1[cache: 0] = Variable;
    // 
    // node Inquire[4]: x = 20, y = 217, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "is series + 1"
    // page group: Frame
    //
main_Inquire_4_out_1 = 
    Inquire(
    main_Receiver_4_out_1,
    main_Inquire_4_in_2,
    main_Inquire_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Inquire[5]: x = 380, y = 217, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "member count -1"
    // page group: Frame
    //
main_Inquire_5_out_1 = 
    Inquire(
    main_Receiver_4_out_1,
    main_Inquire_5_in_2,
    main_Inquire_5_in_3
    ) [instance: 5, cache: 1];
    // 
    // node Sequencer[1]: x = 380, y = 279, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_1"
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    // input[5]: defaulting = 1, visible = 1, type = 1, value = 10
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 0 10 1 0 10 1 }
    // page group: Frame
    // vcr[1]: min = 0, max = 10, beg = 0, end = 10, cur = 5, inc = 1, loop = off, step = on, pal = off
    // window: position = (0.7344,0.7823), size = 0.2188x0.0771
    //
    main_Sequencer_1_in_3 = @frame;
main_Sequencer_1_out_1[cache: 2] = 
    Sequencer(
    main_Sequencer_1_in_1,
    main_Sequencer_1_in_2,
    main_Sequencer_1_in_3,
    main_Sequencer_1_in_4,
    main_Inquire_5_out_1,
    main_Sequencer_1_in_6,
    main_Sequencer_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Select[2]: x = 240, y = 310, inputs = 3, label = Select
    // page group: Frame
    //
main_Select_2_out_1 = 
    Select(
    main_Receiver_4_out_1,
    main_Sequencer_1_out_1,
    main_Select_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Switch[7]: x = 140, y = 310, inputs = 3, label = Switch
    // page group: Frame
    //
main_Switch_7_out_1 = 
    Switch(
    main_Inquire_4_out_1,
    main_Receiver_4_out_1,
    main_Select_2_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Transmitter[10]: x = 280, y = 403, inputs = 1, label = Field
    // page group: Frame
    //
Field = main_Switch_7_out_1;
    // 
    // node Receiver[1]: x = 20, y = 124, inputs = 1, label = Field
    // page group: Iso surface
    //
main_Receiver_1_out_1[cache: 0] = Field;
    // 
    // node Inquire[6]: x = 20, y = 217, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "is vector + 1"
    // page group: Iso surface
    //
main_Inquire_6_out_1 = 
    Inquire(
    main_Receiver_1_out_1,
    main_Inquire_6_in_2,
    main_Inquire_6_in_3
    ) [instance: 6, cache: 1];
    // 
    // node Compute[1]: x = 160, y = 217, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "mag($0)"
    // page group: Iso surface
    // expression: value = mag(a)
    // name[2]: value = a
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Receiver_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Switch[10]: x = 60, y = 310, inputs = 3, label = Switch
    // page group: Iso surface
    //
main_Switch_10_out_1 = 
    Switch(
    main_Inquire_6_out_1,
    main_Receiver_1_out_1,
    main_Compute_1_out_1
    ) [instance: 10, cache: 1];
    // 
    // node Inquire[7]: x = 20, y = 403, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "is data dependent"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: Iso surface
    //
main_Inquire_7_out_1 = 
    Inquire(
    main_Switch_10_out_1,
    main_Inquire_7_in_2,
    main_Inquire_7_in_3
    ) [instance: 7, cache: 1];
    // 
    // node Receiver[8]: x = 240, y = 155, inputs = 1, label = Variable
    // page group: Iso surface
    //
main_Receiver_8_out_1[cache: 0] = Variable;
    // 
    // node Reset[2]: x = 300, y = 248, inputs = 6, label = Reset
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "main_Reset_2_out_1"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 0, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 0, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Iso surface
    // toggle : 0
    //
    // 
    // node Scalar[2]: x = 240, y = 248, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.5 
    // input[4]: defaulting = 1, visible = 1, type = 3, value = 0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.5 
    // page group: Iso surface
    //
main_Scalar_2_out_1[cache: 2] = 
    Scalar(
    main_Scalar_2_in_1,
    main_Receiver_8_out_1,
    main_Scalar_2_in_3,
    main_Reset_2_out_1,
    main_Scalar_2_in_5,
    main_Scalar_2_in_6,
    main_Scalar_2_in_7,
    main_Scalar_2_in_8,
    main_Scalar_2_in_9,
    main_Scalar_2_in_10,
    main_Scalar_2_in_11
    ) [instance: 2, cache: 1];
    // 
    // node Isosurface[2]: x = 180, y = 403, inputs = 6, label = Isosurface
    // page group: Iso surface
    //
main_Isosurface_2_out_1 = 
    Isosurface(
    main_Switch_10_out_1,
    main_Scalar_2_out_1,
    main_Isosurface_2_in_3,
    main_Isosurface_2_in_4,
    main_Isosurface_2_in_5,
    main_Isosurface_2_in_6
    ) [instance: 2, cache: 1];
    // 
    // node Color[2]: x = 260, y = 496, inputs = 5, label = Color
    // input[3]: defaulting = 0, visible = 1, type = 5, value = .3
    // page group: Iso surface
    //
main_Color_2_out_1 = 
    Color(
    main_Isosurface_2_out_1,
    main_Color_2_in_2,
    main_Color_2_in_3,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Switch[11]: x = 60, y = 527, inputs = 3, label = Switch
    // page group: Iso surface
    //
main_Switch_11_out_1 = 
    Switch(
    main_Inquire_7_out_1,
    main_Color_2_out_1,
    main_Switch_11_in_3
    ) [instance: 11, cache: 1];
    // 
    // node Transmitter[11]: x = 200, y = 558, inputs = 1, label = Iso
    // page group: Iso surface
    //
Iso = main_Switch_11_out_1;
    // 
    // node Receiver[7]: x = 360, y = 124, inputs = 1, label = Iso
    // page group: Image
    //
main_Receiver_7_out_1[cache: 0] = Iso;
    // 
    // node Receiver[6]: x = 60, y = 155, inputs = 1, label = Field
    // page group: Colorslice
    //
main_Receiver_6_out_1[cache: 0] = Field;
    // 
    // node Vector[8]: x = 200, y = 155, inputs = 11, label = Vector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Vector_8"
    // input[3]: defaulting = 0, visible = 0, type = 8, value = [ 0.5 0.5 0.5 ]
    // input[5]: defaulting = 1, visible = 0, type = 8, value = [ -1000000.0 -1000000.0 -1000000.0 ]
    // input[6]: defaulting = 1, visible = 0, type = 8, value = [ 1000000.0 1000000.0 1000000.0 ]
    // input[7]: defaulting = 1, visible = 0, type = 8, value = [       1        1        1]
    // input[9]: defaulting = 1, visible = 0, type = 8, value = [ 5.0 5.0 5.0 ]
    // output[1]: visible = 1, type = 8, value = [ 0.5 0.5 0.5 ]
    // page group: Colorslice
    //
    // 
    // node Vector[1]: x = 360, y = 186, inputs = 11, label = Vector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Vector_1"
    // input[3]: defaulting = 0, visible = 0, type = 8, value = [ 0 0 1 ]
    // input[5]: defaulting = 1, visible = 0, type = 8, value = [ -1000000.0 -1000000.0 -1000000.0 ]
    // input[6]: defaulting = 1, visible = 0, type = 8, value = [ 1000000.0 1000000.0 1000000.0 ]
    // input[7]: defaulting = 1, visible = 0, type = 8, value = [       1        1        1]
    // input[9]: defaulting = 1, visible = 0, type = 8, value = [ 5.0 5.0 5.0 ]
    // output[1]: visible = 1, type = 8, value = [ 0 0 1 ]
    // page group: Colorslice
    //
    // 
    // node MapToPlane[1]: x = 100, y = 248, inputs = 3, label = MapToPlane
    // page group: Colorslice
    //
main_MapToPlane_1_out_1 = 
    MapToPlane(
    main_Receiver_6_out_1,
    main_Vector_8_out_1,
    main_Vector_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node AutoColor[5]: x = 100, y = 341, inputs = 10, label = AutoColor
    // page group: Colorslice
    //
main_AutoColor_5_out_1,
main_AutoColor_5_out_2 = 
    AutoColor(
    main_MapToPlane_1_out_1,
    main_AutoColor_5_in_2,
    main_AutoColor_5_in_3,
    main_AutoColor_5_in_4,
    main_AutoColor_5_in_5,
    main_AutoColor_5_in_6,
    main_AutoColor_5_in_7,
    main_AutoColor_5_in_8,
    main_AutoColor_5_in_9,
    main_AutoColor_5_in_10
    ) [instance: 5, cache: 1];
    // 
    // node Transmitter[12]: x = 160, y = 465, inputs = 1, label = Colorslice
    // page group: Colorslice
    //
Colorslice = main_AutoColor_5_out_1;
    // 
    // node Receiver[9]: x = 520, y = 155, inputs = 1, label = Colorslice
    // page group: Image
    //
main_Receiver_9_out_1[cache: 0] = Colorslice;
    // 
    // node Receiver[18]: x = 60, y = 62, inputs = 1, label = Field
    // page group: Geometry
    //
main_Receiver_18_out_1[cache: 0] = Field;
    // 
    // node ShowConnections[2]: x = 300, y = 155, inputs = 1, label = ShowConnections
    // page group: Geometry
    //
main_ShowConnections_2_out_1 = 
    ShowConnections(
    main_Receiver_18_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Collect[2]: x = 100, y = 310, inputs = 2, label = Collect
    // page group: Geometry
    //
main_Collect_2_out_1 = 
    Collect(
    main_Collect_2_in_1,
    main_ShowConnections_2_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[20]: x = 260, y = 403, inputs = 1, label = Geometry
    // page group: Geometry
    //
Geometry = main_Collect_2_out_1;
    // 
    // node Receiver[19]: x = 420, y = 124, inputs = 1, label = Geometry
    // page group: Image
    //
main_Receiver_19_out_1[cache: 0] = Geometry;
    // 
    // node Collect[1]: x = 160, y = 248, inputs = 3, label = Collect
    // page group: Image
    //
main_Collect_1_out_1 = 
    Collect(
    main_Receiver_7_out_1,
    main_Receiver_9_out_1,
    main_Receiver_19_out_1
    ) [instance: 1, cache: 1];
    // 
    // node AutoCamera[1]: x = 260, y = 341, inputs = 9, label = AutoCamera
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "off-front"
    // page group: Image
    //
main_AutoCamera_1_out_1 = 
    AutoCamera(
    main_Collect_1_out_1,
    main_AutoCamera_1_in_2,
    main_AutoCamera_1_in_3,
    main_AutoCamera_1_in_4,
    main_AutoCamera_1_in_5,
    main_AutoCamera_1_in_6,
    main_AutoCamera_1_in_7,
    main_AutoCamera_1_in_8,
    main_AutoCamera_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Receiver[12]: x = 60, y = 0, inputs = 1, label = Field
    // page group: Streamlines
    //
main_Receiver_12_out_1[cache: 0] = Field;
    // 
    // node Probe[10]: x = 260, y = 0, inputs = 0, label = Streamline point
    // output[1]: visible = 1, type = 8, value = [0.422442,0.510393,0.51277]
    // page group: Streamlines
    //
    // 
    // node String[2]: x = 400, y = 0, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "line"
    // page group: Streamlines
    //
    // 
    // node Vector[3]: x = 460, y = 0, inputs = 11, label = Vector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Vector_3"
    // input[3]: defaulting = 0, visible = 0, type = 8, value = [ 1 0 0 ]
    // input[5]: defaulting = 1, visible = 0, type = 8, value = [ -1000000.0 -1000000.0 -1000000.0 ]
    // input[6]: defaulting = 1, visible = 0, type = 8, value = [ 1000000.0 1000000.0 1000000.0 ]
    // input[7]: defaulting = 1, visible = 0, type = 8, value = [       1        1        1]
    // input[9]: defaulting = 1, visible = 0, type = 8, value = [ 5.0 5.0 5.0 ]
    // output[1]: visible = 1, type = 8, value = [ 1 0 0 ]
    // page group: Streamlines
    //
    // 
    // node Integer[1]: x = 460, y = 93, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 30 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 30 
    // page group: Streamlines
    //
    // 
    // node Grid[1]: x = 300, y = 93, inputs = 4, label = Grid
    // page group: Streamlines
    //
main_Grid_1_out_1 = 
    Grid(
    main_Probe_10_out_1,
    main_String_2_out_1,
    main_Vector_3_out_1,
    main_Integer_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Streamline[2]: x = 60, y = 155, inputs = 7, label = Streamline
    // page group: Streamlines
    //
main_Streamline_2_out_1 = 
    Streamline(
    main_Receiver_12_out_1,
    main_Grid_1_out_1,
    main_Streamline_2_in_3,
    main_Streamline_2_in_4,
    main_Streamline_2_in_5,
    main_Streamline_2_in_6,
    main_Streamline_2_in_7
    ) [instance: 2, cache: 1];
    // 
    // node AutoColor[1]: x = 100, y = 465, inputs = 10, label = AutoColor
    // page group: Streamlines
    //
main_AutoColor_1_out_1,
main_AutoColor_1_out_2 = 
    AutoColor(
    main_Streamline_2_out_1,
    main_AutoColor_1_in_2,
    main_AutoColor_1_in_3,
    main_AutoColor_1_in_4,
    main_AutoColor_1_in_5,
    main_AutoColor_1_in_6,
    main_AutoColor_1_in_7,
    main_AutoColor_1_in_8,
    main_AutoColor_1_in_9,
    main_AutoColor_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Receiver[21]: x = 60, y = 0, inputs = 1, label = Field
    // page group: Arrows
    //
main_Receiver_21_out_1[cache: 0] = Field;
    // 
    // node Compute[4]: x = 60, y = 93, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0+0.001"
    // page group: Arrows
    // expression: value = a+0.001
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_4_out_1 = 
    Compute(
    main_Compute_4_in_1,
    main_Receiver_21_out_1,
    main_Compute_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Vector[5]: x = 300, y = 93, inputs = 11, label = Vector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Vector_5"
    // input[3]: defaulting = 0, visible = 0, type = 8, value = [ 0.5 0.5 0.5 ]
    // input[5]: defaulting = 1, visible = 0, type = 8, value = [ -1000000.0 -1000000.0 -1000000.0 ]
    // input[6]: defaulting = 1, visible = 0, type = 8, value = [ 1000000.0 1000000.0 1000000.0 ]
    // input[7]: defaulting = 1, visible = 0, type = 8, value = [       1        1        1]
    // input[9]: defaulting = 1, visible = 0, type = 8, value = [ 5.0 5.0 5.0 ]
    // output[1]: visible = 1, type = 8, value = [ 0.5 0.5 0.5 ]
    // page group: Arrows
    //
    // 
    // node Vector[2]: x = 400, y = 93, inputs = 11, label = Vector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Vector_2"
    // input[3]: defaulting = 0, visible = 0, type = 8, value = [ 0 0 1 ]
    // input[5]: defaulting = 1, visible = 0, type = 8, value = [ -1000000.0 -1000000.0 -1000000.0 ]
    // input[6]: defaulting = 1, visible = 0, type = 8, value = [ 1000000.0 1000000.0 1000000.0 ]
    // input[7]: defaulting = 1, visible = 0, type = 8, value = [       1        1        1]
    // input[9]: defaulting = 1, visible = 0, type = 8, value = [ 5.0 5.0 5.0 ]
    // output[1]: visible = 1, type = 8, value = [ 0 0 1 ]
    // page group: Arrows
    //
    // 
    // node MapToPlane[2]: x = 60, y = 186, inputs = 3, label = MapToPlane
    // page group: Arrows
    //
main_MapToPlane_2_out_1 = 
    MapToPlane(
    main_Compute_4_out_1,
    main_Vector_5_out_1,
    main_Vector_2_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Scalar[4]: x = 200, y = 248, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_4"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.2 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.2 
    // page group: Arrows
    //
    // 
    // node Scalar[3]: x = 260, y = 248, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 10.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 10.0 
    // page group: Arrows
    //
    // 
    // node Scalar[5]: x = 360, y = 248, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_5"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.0 
    // page group: Arrows
    //
    // 
    // node AutoGlyph[1]: x = 60, y = 341, inputs = 7, label = AutoGlyph
    // page group: Arrows
    //
main_AutoGlyph_1_out_1 = 
    AutoGlyph(
    main_MapToPlane_2_out_1,
    main_AutoGlyph_1_in_2,
    main_Scalar_4_out_1,
    main_Scalar_3_out_1,
    main_Scalar_5_out_1,
    main_AutoGlyph_1_in_6,
    main_AutoGlyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node AutoColor[3]: x = 260, y = 465, inputs = 10, label = AutoColor
    // page group: Arrows
    //
main_AutoColor_3_out_1,
main_AutoColor_3_out_2 = 
    AutoColor(
    main_AutoGlyph_1_out_1,
    main_AutoColor_3_in_2,
    main_AutoColor_3_in_3,
    main_AutoColor_3_in_4,
    main_AutoColor_3_in_5,
    main_AutoColor_3_in_6,
    main_AutoColor_3_in_7,
    main_AutoColor_3_in_8,
    main_AutoColor_3_in_9,
    main_AutoColor_3_in_10
    ) [instance: 3, cache: 1];
    // 
    // node Receiver[24]: x = 60, y = 62, inputs = 1, label = Field
    // page group: Vorticity
    //
main_Receiver_24_out_1[cache: 0] = Field;
    // 
    // node Probe[11]: x = 200, y = 62, inputs = 0, label = Vorticity plane
    // page group: Vorticity
    //
    // 
    // node Vector[4]: x = 360, y = 62, inputs = 11, label = Vector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Vector_4"
    // input[3]: defaulting = 0, visible = 0, type = 8, value = [ 0 1 0 ]
    // input[5]: defaulting = 1, visible = 0, type = 8, value = [ -1000000.0 -1000000.0 -1000000.0 ]
    // input[6]: defaulting = 1, visible = 0, type = 8, value = [ 1000000.0 1000000.0 1000000.0 ]
    // input[7]: defaulting = 1, visible = 0, type = 8, value = [       1        1        1]
    // input[9]: defaulting = 1, visible = 0, type = 8, value = [ 5.0 5.0 5.0 ]
    // output[1]: visible = 1, type = 8, value = [ 0 1 0 ]
    // page group: Vorticity
    //
    // 
    // node MapToPlane[3]: x = 200, y = 155, inputs = 3, label = MapToPlane
    // page group: Vorticity
    //
main_MapToPlane_3_out_1 = 
    MapToPlane(
    main_Receiver_24_out_1,
    main_Probe_11_out_1,
    main_Vector_4_out_1
    ) [instance: 3, cache: 1];
    // 
    // node DivCurl[1]: x = 60, y = 155, inputs = 2, label = DivCurl
    // page group: Vorticity
    //
main_DivCurl_1_out_1,
main_DivCurl_1_out_2 = 
    DivCurl(
    main_MapToPlane_3_out_1,
    main_DivCurl_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Compute[3]: x = 200, y = 248, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "mag($0)"
    // page group: Vorticity
    // expression: value = mag(a)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_3_out_1 = 
    Compute(
    main_Compute_3_in_1,
    main_DivCurl_1_out_1,
    main_Compute_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node AutoColor[4]: x = 60, y = 310, inputs = 10, label = AutoColor
    // page group: Vorticity
    //
main_AutoColor_4_out_1,
main_AutoColor_4_out_2 = 
    AutoColor(
    main_Compute_3_out_1,
    main_AutoColor_4_in_2,
    main_AutoColor_4_in_3,
    main_AutoColor_4_in_4,
    main_AutoColor_4_in_5,
    main_AutoColor_4_in_6,
    main_AutoColor_4_in_7,
    main_AutoColor_4_in_8,
    main_AutoColor_4_in_9,
    main_AutoColor_4_in_10
    ) [instance: 4, cache: 1];
    // 
    // node Receiver[26]: x = 460, y = 248, inputs = 1, label = colormap
    // page group: Image
    //
main_Receiver_26_out_1[cache: 0] = colormap;
    // 
    // node ColorBar[1]: x = 440, y = 372, inputs = 16, label = ColorBar
    // page group: Image
    //
main_ColorBar_1_out_1 = 
    ColorBar(
    main_Receiver_26_out_1,
    main_ColorBar_1_in_2,
    main_ColorBar_1_in_3,
    main_ColorBar_1_in_4,
    main_ColorBar_1_in_5,
    main_ColorBar_1_in_6,
    main_ColorBar_1_in_7,
    main_ColorBar_1_in_8,
    main_ColorBar_1_in_9,
    main_ColorBar_1_in_10,
    main_ColorBar_1_in_11,
    main_ColorBar_1_in_12,
    main_ColorBar_1_in_13,
    main_ColorBar_1_in_14,
    main_ColorBar_1_in_15,
    main_ColorBar_1_in_16
    ) [instance: 1, cache: 1];
    // 
    // node Reset[1]: x = 240, y = 496, inputs = 6, label = Reset
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "main_Reset_1_out_1"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 0, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 0, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Image
    // toggle : 0
    //
    // 
    // node Image[1]: x = 120, y = 496, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_1"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.25 0.25 0.25]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [1.20859 0.838721 2.11295]
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.16625
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.75
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.089117 0.961987 -0.258147]
    // input[11]: defaulting = 0, visible = 0, type = 5, value = 30.0
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 0, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 0, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[20]: visible = 1
    // input[21]: visible = 1
    // input[22]: defaulting = 0, visible = 0, type = 32, value = "black"
    // input[25]: defaulting = 0, visible = 0, type = 32, value = "/tmp/users/logg/driven_cavity/tmp4.ps"
    // input[26]: defaulting = 0, visible = 0, type = 32, value = "ps gray dpi=300 orient=landscape"
    // input[27]: defaulting = 0, visible = 0, type = 1, value = 870
    // input[28]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[31]: defaulting = 0, visible = 0, type = 1, value = 15
    // input[34]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[39]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "rotate"
    // input[42]: defaulting = 0, visible = 0, type = 32, value = "Basic3D"
    // page group: Image
    // title: value = Basic3D
    // depth: value = 24
    // window: position = (0.4648,0.1906), size = 0.5109x0.5437
    // internal caching: 1
    //
main_Image_1_out_1,
main_Image_1_out_2,
main_Image_1_out_3 = 
    Image(
    main_Image_1_in_1,
    main_Collect_1_out_1,
    main_Image_1_in_3,
    main_Image_1_in_4,
    main_Image_1_in_5,
    main_Image_1_in_6,
    main_Image_1_in_7,
    main_Image_1_in_8,
    main_Image_1_in_9,
    main_Image_1_in_10,
    main_Image_1_in_11,
    main_Image_1_in_12,
    main_Image_1_in_13,
    main_Image_1_in_14,
    main_Image_1_in_15,
    main_Image_1_in_16,
    main_Image_1_in_17,
    main_Image_1_in_18,
    main_Image_1_in_19,
    main_AutoCamera_1_out_1,
    main_Reset_1_out_1,
    main_Image_1_in_22,
    main_Image_1_in_23,
    main_Image_1_in_24,
    main_Image_1_in_25,
    main_Image_1_in_26,
    main_Image_1_in_27,
    main_Image_1_in_28,
    main_Image_1_in_29,
    main_Image_1_in_30,
    main_Image_1_in_31,
    main_Image_1_in_32,
    main_Image_1_in_33,
    main_Image_1_in_34,
    main_Image_1_in_35,
    main_Image_1_in_36,
    main_Image_1_in_37,
    main_Image_1_in_38,
    main_Image_1_in_39,
    main_Image_1_in_40,
    main_Image_1_in_41,
    main_Image_1_in_42,
    main_Image_1_in_43,
    main_Image_1_in_44,
    main_Image_1_in_45,
    main_Image_1_in_46,
    main_Image_1_in_47,
    main_Image_1_in_48,
    main_Image_1_in_49
    ) [instance: 1, cache: 1];
    // 
    // node Switch[9]: x = 20, y = 310, inputs = 3, label = Switch
    // input[2]: defaulting = 0, visible = 1, type = 67108863, value = 0
    // input[3]: defaulting = 0, visible = 1, type = 67108863, value = 1
    // page group: Variable
    //
main_Switch_9_out_1 = 
    Switch(
    main_Inquire_3_out_1,
    main_Switch_9_in_2,
    main_Switch_9_in_3
    ) [instance: 9, cache: 1];
    // 
    // node ManageControlPanel[1]: x = 20, y = 403, inputs = 2, label = ManageControlPanel
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Variable Selection"}
    // page group: Variable
    //
    ManageControlPanel(
    main_ManageControlPanel_1_in_1,
    main_Switch_9_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Switch[8]: x = 20, y = 310, inputs = 3, label = Switch
    // input[2]: defaulting = 0, visible = 1, type = 67108863, value = 0
    // input[3]: defaulting = 0, visible = 1, type = 67108863, value = 1
    // page group: Frame
    //
main_Switch_8_out_1 = 
    Switch(
    main_Inquire_4_out_1,
    main_Switch_8_in_2,
    main_Switch_8_in_3
    ) [instance: 8, cache: 1];
    // 
    // node ManageSequencer[1]: x = 20, y = 403, inputs = 1, label = ManageSequencer
    // page group: Frame
    //
    ManageSequencer(
    main_Switch_8_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[17]: x = 400, y = 496, inputs = 1, label = Streamlines
    // page group: Streamlines
    //
Streamlines = main_AutoColor_1_out_1;
    // 
    // node Receiver[13]: x = 40, y = 93, inputs = 1, label = Streamlines
    // page group: Image
    //
main_Receiver_13_out_1[cache: 0] = Streamlines;
    // 
    // node Transmitter[23]: x = 100, y = 496, inputs = 1, label = Arrows
    // page group: Arrows
    //
Arrows = main_AutoColor_3_out_1;
    // 
    // node Receiver[23]: x = 140, y = 93, inputs = 1, label = Arrows
    // page group: Image
    //
main_Receiver_23_out_1[cache: 0] = Arrows;
    // 
    // node Transmitter[24]: x = 260, y = 403, inputs = 1, label = Vorticity
    // page group: Vorticity
    //
Vorticity = main_AutoColor_4_out_1;
    // 
    // node Receiver[25]: x = 260, y = 93, inputs = 1, label = Vorticity
    // page group: Image
    //
main_Receiver_25_out_1[cache: 0] = Vorticity;
    // 
    // node ShowBoundary[1]: x = 60, y = 155, inputs = 2, label = ShowBoundary
    // input[2]: defaulting = 1, visible = 1, type = 3, value = NULL
    // page group: Geometry
    //
main_ShowBoundary_1_out_1 = 
    ShowBoundary(
    main_Receiver_18_out_1,
    main_ShowBoundary_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node ShowBox[2]: x = 200, y = 155, inputs = 1, label = ShowBox
    // page group: Geometry
    //
main_ShowBox_2_out_1,
main_ShowBox_2_out_2 = 
    ShowBox(
    main_Receiver_18_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[21]: x = 400, y = 496, inputs = 1, label = isosurface
    // page group: Iso surface
    //
isosurface = main_Isosurface_2_out_1;
    // 
    // node Transmitter[25]: x = 260, y = 341, inputs = 1, label = wireless_25
    // page group: Colorslice
    //
wireless_25 = main_AutoColor_5_out_2;
    //
    // decorator Annotate	pos=(20,31) size=358x44 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 86
    // annotation user: Import of data. Specify the filename in FileSelector
    // annotation user: and choose dataset from Selector.
    // annotation user_end: <NULL>
    // resource *decorator.foreground:#b30000
    // page group: Import
    //
    // decorator Annotate	pos=(20,31) size=321x28 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 45
    // annotation user: Selection of variables from imported dataset.
    // annotation user_end: <NULL>
    // resource *decorator.foreground:#b30000
    // page group: Variable
    //
    // decorator Annotate	pos=(20,31) size=334x28 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 48
    // annotation user: Select a given frame from from a series of data.
    // annotation user_end: <NULL>
    // resource *decorator.foreground:#b30000
    // page group: Frame
    //
    // decorator Annotate	pos=(20,31) size=386x44 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 96
    // annotation user: Create isosurface for a field. If the data are non-scalar,
    // annotation user: the magnitude is computed visualized.
    // annotation user_end: <NULL>
    // resource *decorator.alignment:XmALIGNMENT_BEGINNING
    // resource *decorator.foreground:#b30000
    // page group: Iso surface
    //
    // decorator Annotate	pos=(20,31) size=540x60 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 187
    // annotation user: This page creates a maptoplane (cutting plane) throught the data, along with
    // annotation user: a box around the data. The data are colored using a colormap "datadriven"
    // annotation user: by the range of the entire data set.
    // annotation user_end: <NULL>
    // resource *decorator.alignment:XmALIGNMENT_BEGINNING
    // page group: Colorslice
    //
    // decorator Annotate	pos=(20,31) size=336x28 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 48
    // annotation user: Selection and presentation of the visualization.
    // annotation user_end: <NULL>
    // resource *decorator.foreground:#b30000
    // page group: Image
// network: end of macro body
CacheScene(main_Image_1_in_1, main_Image_1_out_1, main_Image_1_out_2);
}
main_FileSelector_3_out_1 = "/home/logg/work/src/dolfin/dolfin/src/demo/grid/grid_refined.dx";
main_StringList_1_out_1 = { "Grid", "u" };
main_Selector_3_in_1 = "Selector_3";
main_Selector_3_in_2 = "Grid" ;
main_Selector_3_in_3 = 0 ;
main_Selector_3_in_5 = NULL;
main_Selector_3_in_6 = NULL;
main_Selector_3_in_7 = NULL;
main_Selector_3_out_2 = "Grid" ;
main_String_1_out_1 = "dx";
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Transmitter_8_out_1 = NULL;
main_Receiver_3_out_1 = NULL;
main_Inquire_3_in_2 = "is generic group +1";
main_Inquire_3_in_3 = NULL;
main_Inquire_3_out_1 = NULL;
main_Selector_2_in_1 = "Selector_2";
main_Selector_2_in_2 = "on" ;
main_Selector_2_in_3 = 1 ;
main_Selector_2_in_5 = NULL;
main_Selector_2_in_6 = NULL;
main_Selector_2_in_7 = NULL;
main_Selector_2_out_1 = 1 ;
main_Select_1_in_3 = NULL;
main_Select_1_out_1 = NULL;
main_Switch_6_out_1 = NULL;
main_Transmitter_9_out_1 = NULL;
main_Receiver_4_out_1 = NULL;
main_Inquire_4_in_2 = "is series + 1";
main_Inquire_4_in_3 = NULL;
main_Inquire_4_out_1 = NULL;
main_Inquire_5_in_2 = "member count -1";
main_Inquire_5_in_3 = NULL;
main_Inquire_5_out_1 = NULL;
main_Sequencer_1_in_1 = "Sequencer_1";
main_Sequencer_1_in_2 = NULL;
main_Sequencer_1_in_3 = NULL;
main_Sequencer_1_in_4 = 0;
main_Sequencer_1_in_6 = NULL;
main_Sequencer_1_in_7 = { 0 10 1 0 10 1 };
main_Sequencer_1_out_1 = NULL;

@startframe = 0;
@nextframe  = @startframe;
@endframe   = 10;
@deltaframe = 1;
main_Select_2_in_3 = NULL;
main_Select_2_out_1 = NULL;
main_Switch_7_out_1 = NULL;
main_Transmitter_10_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_Inquire_6_in_2 = "is vector + 1";
main_Inquire_6_in_3 = NULL;
main_Inquire_6_out_1 = NULL;
main_Compute_1_in_1 = "mag($0)";
main_Compute_1_out_1 = NULL;
main_Switch_10_out_1 = NULL;
main_Inquire_7_in_2 = "is data dependent";
main_Inquire_7_in_3 = "positions";
main_Inquire_7_out_1 = NULL;
main_Receiver_8_out_1 = NULL;
main_Reset_2_in_1 = "main_Reset_2_out_1";
main_Reset_2_in_2 = 0;
main_Reset_2_in_3 = 0;
main_Reset_2_in_4 = NULL;
main_Reset_2_in_5 = NULL;
main_Reset_2_in_6 = NULL;
main_Reset_2_out_1 = 0;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_3 = 0.5 ;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_2_out_1 = 0.5 ;
main_Isosurface_2_in_3 = NULL;
main_Isosurface_2_in_4 = NULL;
main_Isosurface_2_in_5 = NULL;
main_Isosurface_2_in_6 = NULL;
main_Isosurface_2_out_1 = NULL;
main_Color_2_in_2 = NULL;
main_Color_2_in_3 = .3;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_Switch_11_in_3 = NULL;
main_Switch_11_out_1 = NULL;
main_Transmitter_11_out_1 = NULL;
main_Receiver_7_out_1 = NULL;
main_Receiver_6_out_1 = NULL;
main_Vector_8_in_1 = "Vector_8";
main_Vector_8_in_2 = NULL;
main_Vector_8_in_3 = [ 0.5 0.5 0.5 ];
main_Vector_8_in_4 = NULL;
main_Vector_8_in_5 = NULL;
main_Vector_8_in_6 = NULL;
main_Vector_8_in_7 = NULL;
main_Vector_8_in_8 = NULL;
main_Vector_8_in_9 = NULL;
main_Vector_8_in_10 = NULL;
main_Vector_8_in_11 = NULL;
main_Vector_8_out_1 = [ 0.5 0.5 0.5 ];
main_Vector_1_in_1 = "Vector_1";
main_Vector_1_in_2 = NULL;
main_Vector_1_in_3 = [ 0 0 1 ];
main_Vector_1_in_4 = NULL;
main_Vector_1_in_5 = NULL;
main_Vector_1_in_6 = NULL;
main_Vector_1_in_7 = NULL;
main_Vector_1_in_8 = NULL;
main_Vector_1_in_9 = NULL;
main_Vector_1_in_10 = NULL;
main_Vector_1_in_11 = NULL;
main_Vector_1_out_1 = [ 0 0 1 ];
main_MapToPlane_1_out_1 = NULL;
main_AutoColor_5_in_2 = NULL;
main_AutoColor_5_in_3 = NULL;
main_AutoColor_5_in_4 = NULL;
main_AutoColor_5_in_5 = NULL;
main_AutoColor_5_in_6 = NULL;
main_AutoColor_5_in_7 = NULL;
main_AutoColor_5_in_8 = NULL;
main_AutoColor_5_in_9 = NULL;
main_AutoColor_5_in_10 = NULL;
main_AutoColor_5_out_1 = NULL;
main_AutoColor_5_out_2 = NULL;
main_Transmitter_12_out_1 = NULL;
main_Receiver_9_out_1 = NULL;
main_Receiver_18_out_1 = NULL;
main_ShowConnections_2_out_1 = NULL;
main_Collect_2_in_1 = NULL;
main_Collect_2_out_1 = NULL;
main_Transmitter_20_out_1 = NULL;
main_Receiver_19_out_1 = NULL;
main_Collect_1_out_1 = NULL;
main_AutoCamera_1_in_2 = "off-front";
main_AutoCamera_1_in_3 = NULL;
main_AutoCamera_1_in_4 = NULL;
main_AutoCamera_1_in_5 = NULL;
main_AutoCamera_1_in_6 = NULL;
main_AutoCamera_1_in_7 = NULL;
main_AutoCamera_1_in_8 = NULL;
main_AutoCamera_1_in_9 = NULL;
main_AutoCamera_1_out_1 = NULL;
main_Receiver_12_out_1 = NULL;
main_Probe_10_out_1 = [0.422442,0.510393,0.51277];
main_String_2_out_1 = "line";
main_Vector_3_in_1 = "Vector_3";
main_Vector_3_in_2 = NULL;
main_Vector_3_in_3 = [ 1 0 0 ];
main_Vector_3_in_4 = NULL;
main_Vector_3_in_5 = NULL;
main_Vector_3_in_6 = NULL;
main_Vector_3_in_7 = NULL;
main_Vector_3_in_8 = NULL;
main_Vector_3_in_9 = NULL;
main_Vector_3_in_10 = NULL;
main_Vector_3_in_11 = NULL;
main_Vector_3_out_1 = [ 1 0 0 ];
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_2 = NULL;
main_Integer_1_in_3 = 30 ;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = NULL;
main_Integer_1_in_6 = NULL;
main_Integer_1_in_7 = NULL;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_1_out_1 = 30 ;
main_Grid_1_out_1 = NULL;
main_Streamline_2_in_3 = NULL;
main_Streamline_2_in_4 = NULL;
main_Streamline_2_in_5 = NULL;
main_Streamline_2_in_6 = NULL;
main_Streamline_2_in_7 = NULL;
main_Streamline_2_out_1 = NULL;
main_AutoColor_1_in_2 = NULL;
main_AutoColor_1_in_3 = NULL;
main_AutoColor_1_in_4 = NULL;
main_AutoColor_1_in_5 = NULL;
main_AutoColor_1_in_6 = NULL;
main_AutoColor_1_in_7 = NULL;
main_AutoColor_1_in_8 = NULL;
main_AutoColor_1_in_9 = NULL;
main_AutoColor_1_in_10 = NULL;
main_AutoColor_1_out_1 = NULL;
main_Receiver_21_out_1 = NULL;
main_Compute_4_in_1 = "$0+0.001";
main_Compute_4_in_3 = NULL;
main_Compute_4_out_1 = NULL;
main_Vector_5_in_1 = "Vector_5";
main_Vector_5_in_2 = NULL;
main_Vector_5_in_3 = [ 0.5 0.5 0.5 ];
main_Vector_5_in_4 = NULL;
main_Vector_5_in_5 = NULL;
main_Vector_5_in_6 = NULL;
main_Vector_5_in_7 = NULL;
main_Vector_5_in_8 = NULL;
main_Vector_5_in_9 = NULL;
main_Vector_5_in_10 = NULL;
main_Vector_5_in_11 = NULL;
main_Vector_5_out_1 = [ 0.5 0.5 0.5 ];
main_Vector_2_in_1 = "Vector_2";
main_Vector_2_in_2 = NULL;
main_Vector_2_in_3 = [ 0 0 1 ];
main_Vector_2_in_4 = NULL;
main_Vector_2_in_5 = NULL;
main_Vector_2_in_6 = NULL;
main_Vector_2_in_7 = NULL;
main_Vector_2_in_8 = NULL;
main_Vector_2_in_9 = NULL;
main_Vector_2_in_10 = NULL;
main_Vector_2_in_11 = NULL;
main_Vector_2_out_1 = [ 0 0 1 ];
main_MapToPlane_2_out_1 = NULL;
main_Scalar_4_in_1 = "Scalar_4";
main_Scalar_4_in_2 = NULL;
main_Scalar_4_in_3 = 0.2 ;
main_Scalar_4_in_4 = NULL;
main_Scalar_4_in_5 = NULL;
main_Scalar_4_in_6 = NULL;
main_Scalar_4_in_7 = NULL;
main_Scalar_4_in_8 = NULL;
main_Scalar_4_in_9 = NULL;
main_Scalar_4_in_10 = NULL;
main_Scalar_4_in_11 = NULL;
main_Scalar_4_out_1 = 0.2 ;
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 10.0 ;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_5 = NULL;
main_Scalar_3_in_6 = NULL;
main_Scalar_3_in_7 = NULL;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = NULL;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = NULL;
main_Scalar_3_out_1 = 10.0 ;
main_Scalar_5_in_1 = "Scalar_5";
main_Scalar_5_in_2 = NULL;
main_Scalar_5_in_3 = 0.0 ;
main_Scalar_5_in_4 = NULL;
main_Scalar_5_in_5 = NULL;
main_Scalar_5_in_6 = NULL;
main_Scalar_5_in_7 = NULL;
main_Scalar_5_in_8 = NULL;
main_Scalar_5_in_9 = NULL;
main_Scalar_5_in_10 = NULL;
main_Scalar_5_in_11 = NULL;
main_Scalar_5_out_1 = 0.0 ;
main_AutoGlyph_1_in_2 = NULL;
main_AutoGlyph_1_in_6 = NULL;
main_AutoGlyph_1_in_7 = NULL;
main_AutoGlyph_1_out_1 = NULL;
main_AutoColor_3_in_2 = NULL;
main_AutoColor_3_in_3 = NULL;
main_AutoColor_3_in_4 = NULL;
main_AutoColor_3_in_5 = NULL;
main_AutoColor_3_in_6 = NULL;
main_AutoColor_3_in_7 = NULL;
main_AutoColor_3_in_8 = NULL;
main_AutoColor_3_in_9 = NULL;
main_AutoColor_3_in_10 = NULL;
main_AutoColor_3_out_1 = NULL;
main_Receiver_24_out_1 = NULL;
main_Probe_11_out_1 = NULL;
main_Vector_4_in_1 = "Vector_4";
main_Vector_4_in_2 = NULL;
main_Vector_4_in_3 = [ 0 1 0 ];
main_Vector_4_in_4 = NULL;
main_Vector_4_in_5 = NULL;
main_Vector_4_in_6 = NULL;
main_Vector_4_in_7 = NULL;
main_Vector_4_in_8 = NULL;
main_Vector_4_in_9 = NULL;
main_Vector_4_in_10 = NULL;
main_Vector_4_in_11 = NULL;
main_Vector_4_out_1 = [ 0 1 0 ];
main_MapToPlane_3_out_1 = NULL;
main_DivCurl_1_in_2 = NULL;
main_DivCurl_1_out_1 = NULL;
main_Compute_3_in_1 = "mag($0)";
main_Compute_3_in_3 = NULL;
main_Compute_3_out_1 = NULL;
main_AutoColor_4_in_2 = NULL;
main_AutoColor_4_in_3 = NULL;
main_AutoColor_4_in_4 = NULL;
main_AutoColor_4_in_5 = NULL;
main_AutoColor_4_in_6 = NULL;
main_AutoColor_4_in_7 = NULL;
main_AutoColor_4_in_8 = NULL;
main_AutoColor_4_in_9 = NULL;
main_AutoColor_4_in_10 = NULL;
main_AutoColor_4_out_1 = NULL;
main_Receiver_26_in_1 = NULL;
main_Receiver_26_out_1 = NULL;
main_ColorBar_1_in_2 = NULL;
main_ColorBar_1_in_3 = NULL;
main_ColorBar_1_in_4 = NULL;
main_ColorBar_1_in_5 = NULL;
main_ColorBar_1_in_6 = NULL;
main_ColorBar_1_in_7 = NULL;
main_ColorBar_1_in_8 = NULL;
main_ColorBar_1_in_9 = NULL;
main_ColorBar_1_in_10 = NULL;
main_ColorBar_1_in_11 = NULL;
main_ColorBar_1_in_12 = NULL;
main_ColorBar_1_in_13 = NULL;
main_ColorBar_1_in_14 = NULL;
main_ColorBar_1_in_15 = NULL;
main_ColorBar_1_in_16 = NULL;
main_Reset_1_in_1 = "main_Reset_1_out_1";
main_Reset_1_in_2 = 0;
main_Reset_1_in_3 = 0;
main_Reset_1_in_4 = NULL;
main_Reset_1_in_5 = NULL;
main_Reset_1_in_6 = NULL;
main_Reset_1_out_1 = 0;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_1_in_1 = "Image_1";
main_Image_1_in_3 = "X24,,Basic3D";
main_Image_1_in_4 = 1;
main_Image_1_in_5 = [0.25 0.25 0.25];
main_Image_1_in_6 = [1.20859 0.838721 2.11295];
main_Image_1_in_7 = NULL;
main_Image_1_in_8 = 640;
main_Image_1_in_9 = 0.75;
main_Image_1_in_10 = [-0.089117 0.961987 -0.258147];
main_Image_1_in_11 = 30.0;
main_Image_1_in_12 = 1;
main_Image_1_in_13 = NULL;
main_Image_1_in_14 = 1;
main_Image_1_in_15 = "none";
main_Image_1_in_16 = "none";
main_Image_1_in_17 = NULL;
main_Image_1_in_18 = NULL;
main_Image_1_in_19 = 0;
main_Image_1_in_22 = "black";
main_Image_1_in_23 = NULL;
main_Image_1_in_25 = "/tmp/users/logg/driven_cavity/tmp4.ps";
main_Image_1_in_26 = "ps gray dpi=300 orient=landscape";
main_Image_1_in_27 = 870;
main_Image_1_in_28 = 1.0;
main_Image_1_in_29 = 1;
main_Image_1_in_30 = NULL;
main_Image_1_in_31 = 15;
main_Image_1_in_32 = NULL;
main_Image_1_in_33 = NULL;
main_Image_1_in_34 = 1;
main_Image_1_in_35 = NULL;
main_Image_1_in_36 = NULL;
main_Image_1_in_37 = NULL;
main_Image_1_in_38 = NULL;
main_Image_1_in_39 = 1.0;
main_Image_1_in_40 = NULL;
main_Image_1_in_41 = "rotate";
main_Image_1_in_42 = "Basic3D";
main_Image_1_in_43 = NULL;
main_Image_1_in_44 = NULL;
main_Image_1_in_45 = NULL;
main_Image_1_in_46 = NULL;
main_Image_1_in_47 = NULL;
main_Image_1_in_48 = NULL;
main_Image_1_in_49 = NULL;
main_Switch_9_in_2 = 0;
main_Switch_9_in_3 = 1;
main_Switch_9_out_1 = NULL;
main_ManageControlPanel_1_in_1 = {"Variable Selection"};
main_Switch_8_in_2 = 0;
main_Switch_8_in_3 = 1;
main_Switch_8_out_1 = NULL;
main_Transmitter_17_out_1 = NULL;
main_Transmitter_23_out_1 = NULL;
main_Transmitter_24_out_1 = NULL;
main_ShowBoundary_1_in_2 = NULL;
Executive("product version 4 3 0");
$sync

sequence main();
play;
