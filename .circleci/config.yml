version: 2
jobs:
  build:
    docker:
      - image: quay.io/fenicsproject/dev-env:latest
    working_directory: /home/fenics/working
    steps:
      - run:
          name: Clone DOLFIN
          command: git lfs clone https://bitbucket.org/"${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}".git .
      - checkout
      - run:
          name: Install/update dependencies  # Install with sudo as tests not run as superuser in circleci/python
          command: sudo pip3 install pytest pytest-xdist six flake8 --upgrade
      - run:
          name: Install FEniCS dependencies
          command: |
            if [ "${CIRCLE_BRANCH}" == "next" ] ; then export DEP_BRANCH_NAME="next" ; else export DEP_BRANCH_NAME="master" ; fi
            pip3 install git+https://bitbucket.org/fenics-project/fiat.git@"${DEP_BRANCH_NAME}"
            pip3 install git+https://bitbucket.org/fenics-project/ufl.git@"${DEP_BRANCH_NAME}"
            pip3 install git+https://bitbucket.org/fenics-project/dijitso.git@"${DEP_BRANCH_NAME}"
            pip3 install git+https://bitbucket.org/fenics-project/instant.git@"${DEP_BRANCH_NAME}"
            pip3 install git+https://bitbucket.org/fenics-project/ffc.git@"${DEP_BRANCH_NAME}"
      - run:
          name: Flake8 checks on pybind11 Python code
          command: python3 -m flake8 python/dolfin
      - run:
          name: Configure DOLFIN
          command: mkdir -p build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Developer -DDOLFIN_ENABLE_TESTING=ON
      - run:
          name: Build DOLFIN and install
          command: cd build && make install -j2
      - run:
          name: Run C++ unit tests
          command: cd build && make run_unittests
      - run:
          name: Run C++ regressions tests (serial)
          command: source /usr/local/share/dolfin/dolfin.conf && cd build && make demo* -j2 && ctest -j2
      #- run:
      #    name: Run C++ regression tests (MPI)
      #    command: source /usr/local/share/dolfin/dolfin.conf && cd build && ctest -j2
      - run:
          name: Build Python/pybind11 interface
          command: |
            cd python
            pip3 -v install . --user
      #- run:
      #    name: Run unit tests (serial)
      #    command: python3 -m pytest -n 2 python/test/unit/
      #- run:
      #    name: Run unit tests (MPI parallel)
      #    command: mpirun -n 3 python3 -m pytest python/test/unit/
      - run:
          name: Run Python regression tests (serial)
          command: python3 -m pytest -v python/demo/test.py
